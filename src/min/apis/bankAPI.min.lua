local a={}local b=require("itemManager")local function c(d,e,f)fs.delete("account/"..d)local g=fs.open("account/"..d,"w")g.writeLine(e)g.writeLine(f)g.close()end;local h={}local function i(d,j)local k=os.time(os.date("*t"))if not h[d]then h[d]={}end;table.insert(h[d],{digitalIDs=j,timestamp=k})return#h[d]end;local function l(d,m)if h[d]and h[d][m]then local n=h[d][m]local g=fs.open("account/"..d,"r")local o=tonumber(g.readLine())local p=g.readLine()g.close()local q=b.materializeItems(n.digitalIDs)if not tonumber(q)then return false,string.format("Error while reverting transaction #%d for account %s",m,d)end;local r=o;o=o+q*CONFIG.EXCHANGERATE;c(d,o,p)table.remove(h[d],m)if#h[d]==0 then h[d]=nil end;print(string.format("Transaction #%d for account %s reverted from balance %s to %s",m,d,r,o))return true,"Transaction reverted"else return false,string.format("No pending transaction #%d found for account %s",m,d)end end;function a.checkPendingTransactions()while true do local s=os.time(os.date("*t"))for d,t in pairs(h)do for u=#t,1,-1 do local n=t[u]if s-n.timestamp>CONFIG.TRANSACTION_TIMEOUT then local v,w=l(d,u)if not v then print(w)end end end end;sleep(5)end end;function a.confirmTransaction(d,m)if h[d]and h[d][m]then table.remove(h[d],m)if#h[d]==0 then h[d]=nil end;return true,"Transaction confirmed"else return false,string.format("No pending transaction #%d found for account %s",m,d)end end;function a.deposit(d,j,f)local g=fs.open("account/"..d,"r")if g~=nil then local x=tonumber(g.readLine())local o=x;local p=g.readLine()g.close()if f==p then local v,w=pcall(function()return b.materializeItems(j)end)if not v then local y=w:match(":%d+: (.+)")or w;if y=="Bank is full!"then return false,y else print(w)return false,"Unknown Server Error"end else o=o+w*CONFIG.EXCHANGERATE;c(d,o,p)return true,o,x end else return false,"Incorrect Pin"end end end;function a.withdraw(d,q,f)local g=fs.open("account/"..d,"r")if g~=nil then local o=tonumber(g.readLine())local p=g.readLine()g.close()if f==p then if o>=q then local v,w=pcall(function()return b.digitizeAmount(q)end)if not v then local y=w:match(":%d+: (.+)")or w;if y=="Bank is too poor!"then return false,y else print(w)return false,"Unknown Server Error"end else o=o-q*CONFIG.EXCHANGERATE;c(d,o,p)local m=i(d,w)return true,w,o,m end else return false,"Insufficient Funds"end else return false,"Incorrect Pin"end end end;function a.getBalance(d,f)local g=fs.open("account/"..d,"r")if g~=nil then local o=tonumber(g.readLine())local p=g.readLine()g.close()if f==p then return true,o else return false,"Incorrect Pin"end end end;function a.transfer(d,q,z,f)if d==z then return false,"Cannot transfer to the same account"end;local g=fs.open("account/"..d,"r+")local A=fs.open("account/"..z,"r+")if g~=nil and A~=nil then local o=tonumber(g.readLine())local p=g.readLine()local B=tonumber(A.readLine())local C=A.readLine()if f==p then if o>=q then o=o-q;B=B+q;c(d,o,p)c(d,B,C)g.close()A.close()return true,o else return false,"Insufficient Funds"end else return false,"Incorrect Pin"end end end;function a.checkPin(d,f)local D=false;if not d or not f then return D end;local g=fs.open("account/"..d,"r+")if g~=nil then local o=tonumber(g.readLine())local p=g.readLine()if f==p then D=true end;g.close()return D else return false end end;function a.checkCard(d)local D=false;if not d then return D end;local g=fs.open("account/"..d,"r")if g~=nil then D=true;g.close()end;return D end;function a.createAccount(d,f)if not d or not f then return false,"Account number and PIN are required"end;local g=nil;g=fs.open("account/"..d,"r")if g~=nil then g.close()return false,"Account already exists"end;g=fs.open("account/"..d,"w")g.writeLine(0)g.writeLine(f)g.close()return true,"Account created successfully"end;return a
