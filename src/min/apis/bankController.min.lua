local a=require("bankAPI")local b="bank"local function c(d,e,f,g,h,i)local j=fs.open("bank_log.txt","a")local k=textutils.formatTime(os.time(),true)local l={string.format("[%s] ATM: %s, Request: %s, Account: %s",k,d,e,f)}if g then table.insert(l,string.format("Target Account: %s",g))end;if h then table.insert(l,string.format("Start Balance: %s",h))end;if i then table.insert(l,string.format("End Balance: %s",i))end;local m=table.concat(l,", ")j.writeLine(m)print(m)j.close()end;local function n()local o={}print("Searching for wireless modem...")while not o[1]do o={peripheral.find("modem",function(p,q)return q.isWireless()end)}if not o[1]then print("No wireless modem found")print("Please connect a wireless modem to continue")sleep(5)end end;print("Modem Found.")rednet.open(peripheral.getName(o[1]))rednet.host("bank","bankController")while true do::r::local s,m=rednet.receive(b)if not m.type or not m.acc or not m.pin and not m.type=="checkCard"then rednet.send(s,{success=false,error="Invalid Request"},b)goto r end;if m.type=="balance"then local t,u=a.getBalance(m.acc,m.pin)if not t then rednet.send(s,{success=false,error=u},b)else rednet.send(s,{success=true,balance=u},b)c(m.atmNumber,"balance",m.acc,nil,u,u)end elseif m.type=="deposit"then local t,v,w=a.deposit(m.acc,m.ids,m.pin)if not t then rednet.send(s,{success=false,error=v},b)else rednet.send(s,{success=true,balance=v},b)c(m.atmNumber,"deposit",m.acc,nil,w,v)end elseif m.type=="withdraw"then local t,x,v,y=a.withdraw(m.acc,m.amount,m.pin)if not t then rednet.send(s,{success=false,error=x},b)else rednet.send(s,{success=true,ids=x,transactionID=y},b)c(m.atmNumber,"withdraw",m.acc,nil,v+m.amount*CONFIG.EXCHANGERATE,v)end elseif m.type=="transfer"then if not m.targetAcc then rednet.send(s,{success=false,error="Invalid Request"},b)goto r end;if m.acc==m.targetAcc then rednet.send(s,{success=false,error="Cannot transfer to the same account"},b)goto r end;local t,v=a.transfer(m.acc,m.amount,m.targetAcc,m.pin)if not t then rednet.send(s,{success=false,error=v},b)else rednet.send(s,{success=true,balance=v},b)c(m.atmNumber,"transfer",m.acc,m.targetAcc,v+m.amount,v)end elseif m.type=="checkPin"then rednet.send(s,{success=true,status=a.checkPin(m.acc,m.pin)},b)c(m.atmNumber,m.type,m.acc)elseif m.type=="checkCard"then rednet.send(s,{success=true,status=a.checkCard(m.acc)},b)c(m.atmNumber,m.type,m.acc)elseif m.type=="confirmTransaction"then a.confirmTransaction(m.acc,m.transactionID)elseif m.type=="createAccount"then local z,A=a.createAccount(m.acc,m.pin)rednet.send(s,{success=z,message=A},b)if z then c(m.atmNumber,m.type,m.acc,nil,nil,nil)print("New account "..m.acc.." was created!")else print("Failed to create account "..m.acc.."because of: "..A)end end end end;return{StartBankingSystem=n}
